version: 0.2

env:
  variables:
    SLACK_COLOR: "good"
    BUILD_STATUS: "completed successfully"
    SLACK_CHANNEL: "p-qppsf-deploys"
    CODEBUILD_ICON: "https://upload.wikimedia.org/wikipedia/commons/9/93/Amazon_Web_Services_Logo.svg"
    AWS_DEFAULT_REGION: "us-east-1"
    TEXT_VALUE: ""

  parameter-store:
    SLACK_URL: "/slack/p-qppsf-deploys"
    DOCKERHUB_TOKEN: "/global/dockerhub_token"
    DOCKERHUB_USER: "/global/dockerhub_user"
    AWS_ACCOUNT : "/global/aws_account"
    REPO_PAT: "/global/scoring_api_repo_pat"
    BRANCH_STATUS_URL: "/global/ct_branch_status_url"
    PART_FILE: "/qppar-sf/conversion-tool/CPC_PLUS_FILE_NAME"   
    PART_FILE_BUCKET: "/qppar-sf/$ENV/conversion-tool/CPC_PLUS_BUCKET_NAME"
    OUTPUT_PART_FILE: "/qppar-sf/$ENV/conversion-tool/CPC_PLUS_VALIDATION_FILE"

phases:
  install:
    runtime-versions:
      python: 3.8
    commands:
      - docker --version
      - aws --version
      - jq --version
      - pip install ecs-deploy
      - pwd
      - ls -la

  pre_build:
    commands:
      - echo ${CODEBUILD_SRC_DIR}
      - ECS_ENV="${ENV}"
      - |
        if [ "$ENV" = "prod" ] || [ "$ENV" = "devpre" ]; then
          CLUSTER_NAME="qppa-${ENV}-api-ecs"
        else
          CLUSTER_NAME="${ENV}-api-ecs"
        fi
      - echo "${CLUSTER_NAME}"
      - SERVICE_NAME="${ENV}-conversion-tool"
      - BRANCH=$(echo "${CODEBUILD_SOURCE_VERSION}")
      - echo ${CODEBUILD_RESOLVED_SOURCE_VERSION}
      - echo "${BRANCH}"
      - COMMIT_SHORT_SHA=$(echo "${CODEBUILD_RESOLVED_SOURCE_VERSION}" | cut -c1-7)
      - echo "${COMMIT_SHORT_SHA}"
      - TAG_BUILD="${ENV}-conversion-tool:${BRANCH}-${COMMIT_SHORT_SHA}"
      - TAG_GIT="${AWS_ACCOUNT}.dkr.ecr.us-east-1.amazonaws.com/${SERVICE_NAME}:${BRANCH}-${COMMIT_SHORT_SHA}"
      - TAG_LATEST="${AWS_ACCOUNT}.dkr.ecr.us-east-1.amazonaws.com/${SERVICE_NAME}:latest"
      - echo Getting Certificates for ${ENV}
      - chmod +x ./qppsfct-copy-certs.sh
      - ./qppsfct-copy-certs.sh $ENV $AWS_DEFAULT_REGION
      - pip install openpyxl
      - echo "Updating participation file"
      - chmod +x ./upload-part-file.sh
      - ./upload-part-file.sh $PART_FILE_BUCKET $PART_FILE $OUTPUT_PART_FILE $AWS_DEFAULT_REGION
      - echo "Logging in to Amazon ECR..."
      - echo $DOCKERHUB_TOKEN | docker login --username $DOCKERHUB_USER --password-stdin
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin ${AWS_ACCOUNT}.dkr.ecr.us-east-1.amazonaws.com
      - TEXT_VALUE="Deploying QPP conversion tool service branch ${BRANCH} to ${ECS_ENV}-conversion-tool..."
      - curl -X POST --fail --data-urlencode "payload={\"text\":\"Deployment Status\",\"channel\":\"${SLACK_CHANNEL}\",\"username\":\"CodeBuild\",\"icon_url\":\"${CODEBUILD_ICON}\",\"attachments\":[{\"title\":\"${TEXT_VALUE}\",\"color\":\"${SLACK_COLOR}\"}]}" ${SLACK_URL}

  build:
    commands:
      - echo "Deploying..."
      - echo "Build started on `date`..."
      - echo "Building the Docker image for conversion tool..."
      - docker build -t $TAG_LATEST -t $TAG_GIT .;
      - echo "It's time to kill the build"

  post_build:
    commands:
      # Check the build status and set the slack message to reflect pass or fail status
      - echo "Code build exit number (1 is success) = $CODEBUILD_BUILD_SUCCEEDING"
      - if [ $CODEBUILD_BUILD_SUCCEEDING = 0 ]; then SLACK_COLOR="danger" && BUILD_STATUS="FAILED"; fi
      - TEXT_VALUE="Deployment of branch ${BRANCH} to QPP Conversion Tool service in $ENV-conversion-tool $BUILD_STATUS"
