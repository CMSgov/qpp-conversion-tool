version: 0.2
env:
  parameter-store: 
    AWS_ACCOUNT_ID: "/qppar-sf/account_id"
    DOCKERHUB_USERNAME: "/qppar-sf/DOCKERHUB_USERNAME"
    DOCKERHUB_PASS: "/qppar-sf/DOCKERHUB_PASS"
phases:
  install:
    runtime-versions:
      python: 3.8
  pre_build:
    commands:
      - echo ${CODEBUILD_SRC_DIR}
      - echo ${AWS_DEFAULT_REGION}
      - echo ${AWS_ACCOUNT_ID}
      - echo ${ENVIRONMENT}
      - echo ${CODEBUILD_RESOLVED_SOURCE_VERSION}
      - echo Getting Certificates for ${ENVIRONMENT}
      - chmod +x ./qppsfct-copy-certs.sh
      - ./qppsfct-copy-certs.sh $ENVIRONMENT $AWS_DEFAULT_REGION
      - echo "Logging in to Amazon dockerHub ECR"
      - docker login --username $DOCKERHUB_USERNAME --password $DOCKERHUB_PASS
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com
  build:
    commands:
      - REPOSITORY_URI="${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com/qppsf/conversion-tool/${ENVIRONMENT}"
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - ECR_IMAGE="${REPOSITORY_URI}:${IMAGE_TAG}"
      - TASK_FAMILY="qppsf-conversion-tool-td-${ENVIRONMENT}"
      - ECS_CLUSTER="qppsf-conversion-tool-${ENVIRONMENT}"
      - SERVICE_NAME="conversion-tool-service-${ENVIRONMENT}"
      - echo "Building Container Image for ConversionTool"
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest ${ECR_IMAGE}
      - echo Pushing the Docker image
      - docker push $REPOSITORY_URI:latest
      - docker push ${ECR_IMAGE}
      - TASK_DEFINITION=$(aws ecs describe-task-definition --task-definition ${TASK_FAMILY} --query taskDefinition)
      - NEW_TASK_DEFINITION=$(echo $TASK_DEFINITION | jq -r --arg IMAGE ${ECR_IMAGE} '.containerDefinitions[0].image=$IMAGE | del(.taskDefinitionArn) | del(.revision) | del(.status) | del(.requiresAttributes) | del(.compatibilities) | del(.registeredAt) | del(.registeredBy)')
      - echo $NEW_TASK_DEFINITION  > qppsf-conversion-tool-td-${ENVIRONMENT}.json
      - aws ecs register-task-definition --family ${TASK_FAMILY} --region "$AWS_DEFAULT_REGION" --cli-input-json file://qppsf-conversion-tool-td-${ENVIRONMENT}.json
      - LATEST_TASK_DEFINITION=$(aws ecs describe-task-definition --task-definition ${TASK_FAMILY} --query taskDefinition)
      - NEW_REVISION=$(echo $LATEST_TASK_DEFINITION | jq '.revision')
      - echo "Starting ECS Deployment"
      - aws ecs update-service --cluster ${ECS_CLUSTER} --service ${SERVICE_NAME} --task-definition ${TASK_FAMILY}:${NEW_REVISION} --force-new-deployment
      - aws ecs wait services-stable --cluster ${ECS_CLUSTER} --services ${SERVICE_NAME}

  post_build:
      commands:
      - if [ "$CODEBUILD_BUILD_SUCCEEDING" -eq 0 ]; then echo "BUILD-DEPLOY FAILED" && exit 1 ; fi
      - if [ "$CODEBUILD_BUILD_SUCCEEDING" -eq 1 ]; then echo "BUILD-DEPLOY SUCCEEDED" ; fi