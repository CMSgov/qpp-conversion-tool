name: Deploy to Amazon ECR

on:
  push:
    branches:
      - ecr-deploy
      - develop
      - release/*
      - master

env:
  SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

jobs:
  deploy:
    name: Build Docker image and deploy to AWS ECR
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2
  
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Temp - Build and deploy to Amazon ECR #Reminder to remove this block after the project is completed
        if: github.ref == 'refs/heads/ecr-deploy'
        id: build-image
        env:
          ECR_REPOSITORY: new-qpp-conversion-tool
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Temp - Notify slack success
        if: github.ref == 'refs/heads/ecr-deploy' && success()
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel: p-qpp-sub-alerts
          status: Conversion tools - Successful Docker build and AWS ECR deployment  
          color: good

      - name: Temp - Notify slack fail
        if: github.ref == 'refs/heads/ecr-deploy' && failure()
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel: p-qpp-sub-alerts
          status: Conversion tools - Failed Docker build or AWS ECR deployment
          color: danger             
      
      - name: Dev - Build and deploy to Amazon ECR
        if: github.ref == 'refs/heads/develop'
        env:
          ECR_REPOSITORY: qppsf/conversion-tool/dev
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Dev - Notify slack success
        if: github.ref == 'refs/heads/develop' && success()
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel: p-qpp-sub-alerts
          status: Conversion tools - Successful Docker build and AWS ECR deployment
          color: good

      - name: Dev - Notify slack fail
        if: github.ref == 'refs/heads/develop' && failure()
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel: p-qpp-sub-alerts
          status: Conversion tools - Failed Docker build or AWS ECR deployment
          color: danger 

      - name: Impl - Build and deploy to Amazon ECR 
        if: github.ref == 'refs/heads/release/'
        env:
          ECR_REPOSITORY: qppsf/conversion-tool/impl
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Impl - Notify slack success
        if: github.ref == 'refs/heads/release/' && success()
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel: p-qpp-sub-alerts
          status: Conversion tools - Successful Docker build and AWS ECR deployment
          color: good

      - name: Impl - Notify slack fail
        if: github.ref == 'refs/heads/release/' && failure()
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel: p-qpp-sub-alerts
          status: Conversion tools - Failed Docker build or AWS ECR deployment
          color: danger 

      - name: Prod - Build and deploy to Amazon ECR
        if: github.ref == 'refs/heads/master'
        env:
          ECR_REPOSITORY: qppsf/conversion-tool/prod
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Prod - Notify slack success
        if: github.ref == 'refs/heads/master' && success()
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel: p-qpp-sub-alerts
          status: Conversion tools - Successful Docker build and AWS ECR deployment
          color: good

      - name: Prod - Notify slack fail
        if: github.ref == 'refs/heads/master' && failure()
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel: p-qpp-sub-alerts
          status: Conversion tools - Failed Docker build or AWS ECR deployment
          color: danger 

      - name: Logout of Amazon ECR
        if: always()
        run: docker logout ${{ steps.login-ecr.outputs.registry }}